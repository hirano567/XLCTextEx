//	XLCTextEx_1.0x	:	PLib

//	PCharUtility.cpp
//
#include "stdafx.h"

NS_PLIB_BEGIN

//======================================================================
//	StrToIntDec
//======================================================================
//----------------------------------------------------------------------
//	iDecChar
//----------------------------------------------------------------------
int	iDecChar[128]	=
{
//	NULL	SOH		STX		ETX		EOT		ENQ		ACK		BEL
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	BS		HT		LF		VT		FF		CR		SO		SI
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	DLE		DC1		DC2		DC3		DC4		NAK		SYN		ETB
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	CAN		EM		SUB		ESC		FS		GS		RS		US
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	SP		!		"		#		$		%		&		'
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	(		)		*		+		,		-		.		/
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	0		1		2		3		4		5		6		7
	0,		1,		2,		3,		4,		5,		6,		7,

//	8		9		:		;		<		=		>		?
	8,		9,		-1,		-1,		-1,		-1,		-1,		-1,

//	@		A		B		C		D		E		F		G
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	H		I		J		K		L		M		N		O
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	P		Q		R		S		T		U		V		W
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	X		Y		Z		[		\		]		^		_
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	`		a		b		c		d		e		f		g
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	h		i		j		k		l		m		n		o
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	p		q		r		s		t		u		v		w
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	x		y		z		{		|		}		~		DEL
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,
};

//======================================================================
//	StrToIntHex
//======================================================================
//----------------------------------------------------------------------
//	iHexChar
//----------------------------------------------------------------------
int	iHexChar[128]	=
{
//	NULL	SOH		STX		ETX		EOT		ENQ		ACK		BEL
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	BS		HT		LF		VT		FF		CR		SO		SI
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	DLE		DC1		DC2		DC3		DC4		NAK		SYN		ETB
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	CAN		EM		SUB		ESC		FS		GS		RS		US
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	SP		!		"		#		$		%		&		'
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	(		)		*		+		,		-		.		/
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	0		1		2		3		4		5		6		7
	0,		1,		2,		3,		4,		5,		6,		7,

//	8		9		:		;		<		=		>		?
	8,		9,		-1,		-1,		-1,		-1,		-1,		-1,

//	@		A		B		C		D		E		F		G
	-1,		10,		11,		12,		13,		14,		15,		-1,

//	H		I		J		K		L		M		N		O
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	P		Q		R		S		T		U		V		W
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	X		Y		Z		[		\		]		^		_
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	`		a		b		c		d		e		f		g
	-1,		10,		11,		12,		13,		14,		15,		-1,

//	h		i		j		k		l		m		n		o
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	p		q		r		s		t		u		v		w
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	x		y		z		{		|		}		~		DEL
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,
};

//======================================================================
//	StrToIntOct
//======================================================================
//----------------------------------------------------------------------
//	iOctChar
//----------------------------------------------------------------------
int	iOctChar[128]	=
{
//	NULL	SOH		STX		ETX		EOT		ENQ		ACK		BEL
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	BS		HT		LF		VT		FF		CR		SO		SI
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	DLE		DC1		DC2		DC3		DC4		NAK		SYN		ETB
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	CAN		EM		SUB		ESC		FS		GS		RS		US
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	SP		!		"		#		$		%		&		'
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	(		)		*		+		,		-		.		/
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	0		1		2		3		4		5		6		7
	0,		1,		2,		3,		4,		5,		6,		7,

//	8		9		:		;		<		=		>		?
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	@		A		B		C		D		E		F		G
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	H		I		J		K		L		M		N		O
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	P		Q		R		S		T		U		V		W
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	X		Y		Z		[		\		]		^		_
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	`		a		b		c		d		e		f		g
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	h		i		j		k		l		m		n		o
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	p		q		r		s		t		u		v		w
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,

//	x		y		z		{		|		}		~		DEL
	-1,		-1,		-1,		-1,		-1,		-1,		-1,		-1,
};


NS_PLIB_END
